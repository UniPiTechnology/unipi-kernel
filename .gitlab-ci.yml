variables:
#    TEMPLATE_DISABLE: "1"
    TEMPLATE_DEB_NAME: "unipi-kernel-modules"

include: 
    project: docker/template
    file: debian-pkg.yaml

##############################################################
## set empty VERSION_SUFFIX; package names are concatenated with 
##      last kernel name, so they differs for distributions
build-newstable:nano:
    extends: .build_for_newstable
    tags: ['arm64']
    before_script: 
        - apt-get update
        - apt-get install -y axon-kernel-headers
    variables:
        VERSION_SUFFIX: ""

build-newstable:rpi:
    extends: .build_for_newstable
    tags: ['armhf']
    variables:
        VERSION_SUFFIX: ""


build-stable:nano:
    extends: .build_for_stable
    tags: ['arm64']
    only: 
        variables: [$DISABLE_STABLE_ARM64==null, $DISABLE_STABLE_ARM64=="0"]
    before_script: 
        - apt-get update
        - apt-get install -y axon-kernel-headers

build-stable:rpi:
    extends: .build_for_stable
    tags: ['armhf']
    only: 
        variables: [$DISABLE_STABLE_ARMHF==null, $DISABLE_STABLE_ARMHF=="0"]

## this runs ony for stable - creates common packages - DON'T call for triggered pipeline
build-stable:all:
    extends: .build_for_stable
    tags: ['amd64']
    before_script: 
        - apt-get install -y dkms
    script:
        - /ci-scripts/build-package.sh --build=all $TEMPLATE_DEB_NAME
    except:
        refs: [/\.test\./, triggers]


build-oldstable:nano:
    extends: .build_for_oldstable
    tags: ['arm64']
    only: 
        variables: [$DISABLE_OLDSTABLE_ARM64==null, $DISABLE_OLDSTABLE_ARM64=="0"]
    before_script: 
        - apt-get update
        - apt-get install -y axon-kernel-headers
    variables:
        VERSION_SUFFIX: ""

build-oldstable:rpi:
    extends: .build_for_oldstable
    tags: ['armhf']
    only: 
        variables: [$DISABLE_OLDSTABLE_ARMHF==null, $DISABLE_OLDSTABLE_ARMHF=="0"]
    variables:
        VERSION_SUFFIX: ""


deploy-test:
    extends: .deploy_test

deploy-release:
    extends: .deploy_master
